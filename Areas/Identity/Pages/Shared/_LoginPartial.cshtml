@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper HtmlHelper
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var currentPage = ViewContext.ActionDescriptor.DisplayName;
    var isRegisterPage = currentPage?.Contains("Register", StringComparison.OrdinalIgnoreCase) ?? false;
    var isLoginPage = currentPage?.Contains("Login", StringComparison.OrdinalIgnoreCase) ?? false;
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="/" method="post">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        @if (!isRegisterPage)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
        }
        @if (!isLoginPage)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        }
    }
</ul>

